name: Deploy to AWS - Dev

on:
  - pull_request

permissions:
  id-token: write
  contents: read
  pull-requests: write


jobs:
  push_images_to_dev:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: OIDC Auth
        uses: dflook/configure-oidc-aws-credentials@v1
        id: oidc-auth
        with:
          role-arn: ${{ secrets.OIDC_ROLE_ARN }}
          audience: 'sts.amazonaws.com'
          export-variables: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get tags for image - Triage portal
        id: metadata-triage-portal
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.ecr-login.outputs.registry }}/triage-portal-dev
          tags: |
            type=raw,value=latest
            type=raw,value=main
            type=sha

      - name: Get tags for image - Nginx
        id: metadata-nginx
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.ecr-login.outputs.registry }}/nginx-dev
          tags: |
            type=raw,value=latest
            type=raw,value=main
            type=sha

      - name: Push image - Triage Portal
        uses: docker/build-push-action@v4
        with:
          context: ./src
          push: true
          tags: ${{ steps.metadata-triage-portal.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push image - Nginx
        uses: docker/build-push-action@v4
        with:
          context: ./src/nginx
          push: true
          tags: ${{ steps.metadata-nginx.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max